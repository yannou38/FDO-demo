#!/bin/bash

# Copyright (C) 2019 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

rngd -r /dev/urandom

/sbin/udevadm hwdb --update && /
/sbin/udevd --debug --daemon

sleep 3

echo "[            ] Updating system time..." 2>&1 | tee -a /dev/tty0
ntpd -d -N -q -n -p us.pool.ntp.org 2>&1 | tee -a /dev/tty0

echo "[            ] Discovering hardware..." 2>&1 | tee -a /dev/tty0
for f in $(ls /sys/bus/*/devices/*/modalias); do
    modprobe -abq $(cat $f) >/dev/null 2>&1
done

sleep 1

for f in $(ls /sys/bus/*/devices/*/modalias); do 
    modprobe -abq $(cat $f) >/dev/null 2>&1
done

kernel_params=$(cat /proc/cmdline)
if [[ $kernel_params = *"httpserver="* ]]; then
	tmp="${kernel_params##*httpserver=}"
	param_httpserver="${tmp%% *}"
fi

if [[ $kernel_params = *"proxy="* ]]; then
	tmp="${kernel_params##*proxy=}"
	param_proxy="${tmp%% *}"

	export http_proxy=${param_proxy}
	export https_proxy=${param_proxy}
	export no_proxy="localhost,127.0.0.1,${param_httpserver}"
	export HTTP_PROXY=${param_proxy}
	export HTTPS_PROXY=${param_proxy}
	export NO_PROXY="localhost,127.0.0.1,${param_httpserver}"
fi


if [[ $kernel_params = *"liveOs="* ]]; then
	iptables -L  >/dev/null 2>&1
	if [ $? = 0 ]; then
	    # /usr/local/bin/docker-init /usr/local/bin/dockerd &
	    /usr/local/bin/dockerd &
	else
	    /usr/local/bin/dockerd --iptables=false &
	fi
else
	mkdir /mnt/root
	mount /dev/sda3 /mnt/root
	iptables -L  >/dev/null 2>&1
	if [ $? = 0 ]; then
	    # /usr/local/bin/docker-init /usr/local/bin/dockerd &
	    /usr/local/bin/dockerd --data-root=/mnt/root/tmp/docker &
	else
	    /usr/local/bin/dockerd --data-root=/mnt/root/tmp/docker --iptables=false &
	fi
fi

/opt/bootstrap/init

supervisord -n

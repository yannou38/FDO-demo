# Copyright (C) 2019 Intel Corporation
# SPDX-License-Identifier: BSD-3-Clause

spinner() {
  local pid=$!
  local delay=0.08
  local spinstr='|/-\'
  while [ "$(ps a | awk '{print $1}' | grep $pid)" ]; do
    local temp=${spinstr#?}
    printf " [%c]  " "$spinstr" 2>&1 | tee -a /dev/tty0
    local spinstr=$temp${spinstr%"$temp"}
    sleep $delay
    printf "\b\b\b\b\b\b" 2>&1 | tee -a /dev/tty0
  done
  printf "    \b\b\b\b" 2>&1 | tee -a /dev/tty0
}

run()
{
  local msg=$1
  local runThis=$2
  local log=$3
  echo -e "\e[1m\e[4m$(date | awk '{print $4}') - $msg...\e[0m" 2>&1 | tee -a /dev/tty0
  echo "$(date) START: Running $runThis..." >> $log
  if [ "$debug" = true ]; then
    unbuffer $runThis $verbose | tee -a $log /dev/tty0
  else
    (eval $runThis >> $log 2>&1) &
    spinner
    wait %1
    exitcode=$?
    if [ $exitcode -ne 0 ]; then
      local success=false
    else
      local success=true
    fi
    if [ "$success" = false ]; then
      IP=$(ip route get 8.8.8.8 | awk 'NR==1 {print $NF}')
      echo "$(date) FAILED: Running $runThis..." >> $log
      echo -e "\e[1m[\e[31mFAILED: Running $runThis\e[39m]" 2>&1 | tee -a /dev/tty0
      echo -e "\e[1mPress 'enter' to login to the console or SSH into $IP using username and password as 'uos' .  After logging in, type 'utilityos' and check the file $log." 2>&1 | tee -a /dev/tty0
      exit 1
    else
      echo "$(date) SUCCESS: Running $runThis..." >> $log
      echo -e "\e[1m[\e[32msuccess\e[39m]" 2>&1 | tee -a /dev/tty0
    fi
  fi
}

